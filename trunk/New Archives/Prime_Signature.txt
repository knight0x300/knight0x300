 static List<Integer> Psig = new ArrayList<Integer>();  //This list is the prime signature
 static List<Long> Facts = new ArrayList<Long>();     //this list is corresponding primes  
 public static void PrimeSignature_n_PrimeFactors(long n){  
    Psig.clear();
        Facts.clear();
  
   long te;  
     int z=0,t; 
    te=n;
    while(te>1)
    { t=0;
     Boolean chk=true;
    for(;Primes[z]*Primes[z]<=te;z++)
    {if(te%Primes[z]==0){
        Facts.add((long)Primes[z]);
            while(te%Primes[z]==0)
            {t++;te=te/Primes[z];}
            Psig.add(t);
            chk=false;
            break;
    }  }
            if(chk)
              {Facts.add(te);
               Psig.add(1);
               break;
                       }}
       // System.out.println(Psig+"ajncasj  "+Facts);
        
        
     //  return Facts;
    }
    static int ub=10000;//upper bound
static int[] Primes=new int[ub+1];
static  int Ppi=0; 
static void Primegen(){
    
        for(int i=2;i<=ub;i++)
        {if(Primes[i]==0)
        {Primes[Ppi]=i;
        Ppi++;
        for(int j=2;j*i<=ub;j++)
            Primes[j*i]=1;      
        }
            }
        System.out.println(Ppi);
        System.out.println(Primes[Ppi-1]);
}